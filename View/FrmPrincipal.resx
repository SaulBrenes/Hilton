<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjDujjGw72qxsO9qlmV2KsjfuSsI37krAFV
        0q0XcN6sI37krCN+5KwjfuSskKzKqsbDvarGw72qxsO9qsbDvarGw72qxsO9qsbDvarIw784AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfDvf/Hw73/WJTY/yJ+
        5v8ifub/AFTT/xZv3/8ifub/In7m/yJ+5v+Pq8r/x8O9/8fDvf/NtI//zbSP/8u5nv/Hw73/x8O9/8bD
        ulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwrxUx8O9/8fD
        vf9YlNj/In7m/yJ+5v8AVNP/Fm/f/yJ+5v8ifub/In7m/4+ryv/Hw73/x8O9/9uYNP/bmDT/1KZh/8fD
        vf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjC
        vFTHw73/x8O9/0F4y/8AVNP/AFTT/wBU0/8AVNP/AFTT/wBU0/8AVNP/g53E/8fDvf/Hw73/uYAp/7mA
        Kf+9lVn/x8O9/8fDvf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyMK8VMfDvf/Hw73/manC/4OdxP+DncT/g53E/4OdxP+DncT/g53E/4OdxP+wtr//x8O9/8fD
        vf/CrIr/wqyK/8Szm//Hw73/x8O9/8bDulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIwrxUx8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjCvFTHw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfDvf/Hw73/1KZh/9uYNP/bmDT/x8O9/8fD
        vf/NtI//25g0/9uYNP/NtI//x8O9/8fDvf/bmDT/25g0/9SmYf/Hw73/x8O9/8bDulUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwrxUx8O9/8fDvf/UpmH/25g0/9uY
        NP/Hw73/x8O9/820j//bmDT/25g0/820j//Hw73/x8O9/9uYNP/bmDT/1KZh/8fDvf/Hw73/xsO6VQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjCvFTHw73/x8O9/8yg
        Xv/PjzD/z48w/8fDvf/Hw73/ybGN/8+PMP/PjzD/ybGN/8fDvf/Hw73/z48w/8+PMP/MoF7/x8O9/8fD
        vf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfD
        vf/Hw73/vZZZ/7mAKf+5gCn/x8O9/8fDvf/CrIr/uYAp/7mAKf/CrIr/x8O9/8fDvf+5gCn/uYAp/72V
        Wf/Hw73/x8O9/8bDulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADIwrxUx8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMjCvFTHw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfDvf/Hw73/y7me/820j//NtI//x8O9/8fDvf/Jvq3/zbSP/820
        j//Jvq3/x8O9/8fDvf/NtI//zbSP/8u5nv/Hw73/x8O9/8bDulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwrxUx8O9/8fDvf/UpmH/25g0/9uYNP/Hw73/x8O9/820
        j//bmDT/25g0/820j//Hw73/x8O9/9uYNP/bmDT/1KZh/8fDvf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjCvFTHw73/x8O9/9SmYf/bmDT/25g0/8fD
        vf/Hw73/zbSP/9uYNP/bmDT/zbSP/8fDvf/Hw73/25g0/9uYNP/UpmH/x8O9/8fDvf/Gw7pVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfDvf/Hw73/xZtc/8SH
        LP/Ehyz/x8O9/8fDvf/Gr4z/xIcs/8SHLP/Gr4z/x8O9/8fDvf/Ehyz/xIcs/8WbW//Hw73/x8O9/8bD
        ulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwrxUx8O9/8fD
        vf/ApHn/vZZZ/72WWf/Hw73/x8O9/8Szm/+9lln/vZZZ/8Szm//Hw73/x8O9/72WWf+9lln/wKR5/8fD
        vf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjC
        vFTHw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyMK8VMfDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8bDulUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADIwrxUx8O9/8fDvf/Pr4D/1KZh/9SmYf/Hw73/x8O9/8u5nv/UpmH/1KZh/8u5
        nv/Hw73/x8O9/9SmYf/UpmH/z69//8fDvf/Hw73/xsO6VQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjCvFTHw73/x8O9/9SmYf/bmDT/25g0/8fDvf/Hw73/zbSP/9uY
        NP/bmDT/zbSP/8fDvf/Hw73/25g0/9uYNP/UpmH/x8O9/8fDvf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMK8VMfDvf/Hw73/1KZh/9uYNP/bmDT/x8O9/8fD
        vf/NtI//25g0/9uYNP/NtI//x8O9/8fDvf/bmDT/25g0/9SmYf/Hw73/x8O9/8bDulUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIwrxUx8O9/8fDvf+9lln/uYAp/7mA
        Kf/Hw73/x8O9/8Ksiv+5gCn/uYAp/8Ksiv/Hw73/x8O9/7mAKf+5gCn/vZVZ/8fDvf/Hw73/xsO6VQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjCvFTHw73/x8O9/8Sz
        m//CrIr/wqyK/8fDvf/Hw73/xbus/8Ksiv/CrIr/xbur/8fDvf/Hw73/wqyK/8Ksiv/Es5v/x8O9/8fD
        vf/Gw7pVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAureuVbu4
        r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4r/+7uK//u7iv/7u4
        r/+7uK//u7iv/726rlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACmppRWpqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/6allf+mpZX/pqWV/6al
        lf+mpZX/pqWV/6allf+mpZX/pqaUVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAjYx+qY2Mf/+NjH//jYx//42Mf/+NjH//jYx//42Mf/+NjH//jYx//42Mf/+NjH//jYx//42M
        f/+NjH//jYx//42Mf/+NjH//jYx//42Mf/+NjH//jYt+qgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAClophhsq+n+LOwp/2zsKf9s7Cn/bOwp/2zsKf9s7Cn/bOwp/2zsKf9s7Cn/bOw
        p/2zsKf9s7Cn/bOwp/2zsKf9s7Cn/bOwp/2zsKf9s7Cn/bKvp/ilophhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADExLs5xsK94cfDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Gwr3hycS7OQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGxrgSxsG8s8fDvf/Hw73/x8O9/8fD
        vf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/x8O9/8fDvf/Hw73/xsO8s8bGuBIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wAAD/8AAA//AAAP/wA
        AD/8AAA//AAAP/gAAB/4AAAf/AAAP/4AAH8=
</value>
  </data>
</root>