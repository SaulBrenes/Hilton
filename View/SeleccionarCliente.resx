<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Bv8AAAD/AAAA/wcNEf8OGiP/BgoO/wEBAf8VLDr/Jld1/xQuPf8BAQH/AAAA/wcOEv8hVnT/JGGD/yhs
        kf8oaY3/I1t6/ydpjf8eS2X/BAgK/wAAAP8CAwT/FzZJ/yVXdf8TKTf/AQAA/wcMEP8OGiP/BgsP/wAA
        AP8AAAD/BAgL/w4gK/8AAAD/AAAA/wAAAP8AAAD/AAAA/wMFB/8AAAD/AAAA/wAAAP8AAAH/AwQG/wAB
        Af8BAgP/EyQw/xw9Uv8kV3T/G0Vc/woXH/8BAAD/ESs5/yt1nv8pbZT/JFl4/ypvlf8pcJb/Cxoj/wEB
        Af8MHCb/HUpk/yRXdf8cPVL/ESAr/wEBAf8BAQH/AwQG/wAAAP8AAAD/AAAA/wEBAf8DBQb/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wQIC/8UKjj/IEdf/yVZ
        d/8nX3//HUpj/xQxQv8jWXf/HUVc/w0ZIv8fS2X/H01n/xQwQP8fTmn/J2GC/yVXdP8fSWH/Eicz/wMG
        CP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wcPE/8QIi3/FzBA/xk6Tv8XOEv/ECUy/wsX
        H/8HCw7/Cxgg/xEmNP8YOk7/GTpO/xYvP/8PHyn/Bw4S/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8DAwT/AgME/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BAcJ/xUwQP8HERb/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AQME/woXHv8MGSL/CA4T/wUI
        C/8AAAD/AAAA/wAAAP8ZP1T/FzpO/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/w8kMP8cRl3/Bw4T/wMGCP8TKzn/Bw8V/wAAAP8AAAD/GDtQ/xc8
        Uf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8HDhP/CRIY/wAAAP8BAQL/GkNa/w8lM/8AAAD/AAAA/xg7UP8XPFH/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wYOE/8UM0T/H1Ft/yFX
        df8HEBX/AAAA/wAAAP8YO1D/FzxR/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wcQFv8iWHb/Hk5p/xMvP/8GDRH/AAAA/wAAAP8AAAD/GDtQ/xc8
        Uf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8RKjj/GkNa/wEAAP8AAAD/DRwm/wMFB/8AAAD/AAAA/xg7UP8WPFH/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/CBMa/xMrOv8EBgj/DBwm/x5L
        ZP8GDRH/AAAA/wEAAP8ZPlP/GD5T/wEAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8FCAr/Bw4T/wsYIf8GDRL/AAAA/wAAAP8CAgP/CRMa/wgT
        Gf8CAgL/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAv8GCw//CxUc/wwZIv8LGSH/Bg4T/wQI
        C/8DBAX/BAkM/wcQFf8MGiP/DBki/woUGv8FCQz/AQEB/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        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
        AAA=
</value>
  </data>
</root>